openapi: 3.0.2
info:
  title: Swagger UserService - OpenApi 3.0
  description: |
    This is the documentation for the UserService API of the IsHelp application.
    We tried a microservices approach and this Service serves as the link between our frontends and Keycloak.
    This API is designed and documented following the OpenApi specifications.
  contact:
    email: arthur.cann@eleve.isep.fr
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
tags:
  - name: User
    description: Every operation about Users
  - name: Role
    description: Everything about Role and Authorization handling
  - name: Application
    description: Everything related to Application for joining IsHelp association.
paths:
  /user:
    post:
      tags:
        - User
      summary: Create a new user
      description: Create a new user and save it in Keycloak and Postgres. Password is not save in the database, only in Keycloak
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithPassword'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
      security:
        - keycloak:
            - manage-users
    get:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          description: userId of the user you want to get
          required: true
          schema:
            type: string
            example: 253778f5-3792-4630-a9dd-a71b4d2b0845

      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user/{userId}:
    get:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          description: keycloakId of the user you're trying to get
          required: true
          schema:
            type: string
            example: 253778f5-3792-4630-a9dd-a71b4d2b0845

      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user/list:
    get:
      tags:
        - User
      requestBody:
        description: List of IDs for the Users you want to retrieve
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: 253778f5-3792-4630-a9dd-a71b4d2b0845
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /application:
    get:
      tags:
        - Application
      parameters:
        - name: status
          in: query
          description: Status of the application you're looking for
          required: false
          schema:
            type: string
            enum:
              - SUBMITTED
              - IN_REVIEW
              - ACCEPTED
              - REFUSED
        - name: userId
          in: query
          description: userId of the user attached to the application you're looking for
          required: false
          schema:
            type: string
            example: 253778f5-3792-4630-a9dd-a71b4d2b0845
        - name: pageNumber
          in: query
          description: page number. Used for pagination.
          required: false
          schema:
            type: integer
            default: 0
        - name: pageSize
          in: query
          description: page size. Number of element in the page. Used for pagination.
          required: false
          schema:
            type: integer
            default: 20

      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      tags:
        - Application
      description: You can register new Application using this endpoint.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication'
      responses:
        '204':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'

  /application/{applicationId}:
    get:
      tags:
        - Application
      parameters:
        - name: applicationId
          in: path
          description: applicationId of the application you want to retrieve
          required: true
          schema:
            type: string
            example: 253778f5-3792-4630-a9dd-a71b4d2b0845
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'



components:
  schemas:
    User:
      type: object
      required:
        - username
        - email
      properties:
        userId:
          type: string
          example: a3c443b3-5b9d-4701-8d94-f56549d2fa3f
        username:
          type: string
          example: Moeve
        student_id:
          type: integer
          format: int16
          example: 60125
        email:
          type: string
          example: arthur.cann@eleve.isep.fr
        first_name:
          type: string
          example: Arthur
        last_name:
          type: string
          example: Cann
        profile_picture:
          type: string
          example: path/to/profile/picture.png
        device_token:
          type: string
          example: APA91bHLmrw120zwkLloO4xiqQwiFPU6fFDTQiTPZjvJdDsehm-saXj2o-FFa8bsK5k-My0pwb1Os1LqQYwuytYksSShyg-n7ff3YJjP4-W5pZetQUWUhIuCDig9CnUjBTm5QAFobTvs
        language:
          type: string
          description: default language of the user
          enum:
            - FR
            - EN
    UserWithPassword:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
    Application:
      type: object
      required:
      properties:
        applicationId:
          type: string
          example: 253778f5-3792-4630-a9dd-a71b4d2b0845
        status:
          type: string
          description: current status of the application
          enum:
            - SUBMITTED
            - IN_REVIEW
            - ACCEPTED
            - REFUSED
        object:
          type: string

    CreateApplication:
      type: object
      properties:
        object:
          type: string
          example: Example object
        motivations:
          type: string
          example: Example motivations
        resume:
          type: string
          example: Example resume
        contact:
          type: string
          example: Example contact



  securitySchemes:
    keycloak:
      openIdConnectUrl: 'keycloak.cubetech-app.fr'
      type: openIdConnect